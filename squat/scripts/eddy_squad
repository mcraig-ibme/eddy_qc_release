#!/usr/bin/env fslpython
import argparse
import sys
import pkg_resources


#=========================================================================================
# FSL SQUAD (Study-wise QUality Assessment for DMRI)
# Matteo Bastiani
# 01-06-2017, FMRIB, Oxford
#=========================================================================================
def usage():
    version = pkg_resources.require("eddy_qc")[0].version
    print("eddy_squad: Study-wise QUality Assessment for DMRI, v" + str(version))
    print("   ")
    print("Usage: eddy_squad <list> [options]")
    print("   ")
    print("   ")
    print("Compulsory arguments:")
    print("       list                          Text file containing a list of squad qc folders")
    print("   ")
    print("Optional arguments:")
    print("       -g, --grouping                Text file containing grouping variable for the listed subjects")
    print("       -u, --update [group_db.json]  Update existing eddy_quad reports after generating group report or using a pre-existing [group_db.json] one")
    print("       -gdb, --group-db              Text file containing grouping variable for the database subjects")
    print("       -o, --output-dir              Output directory - default = '<eddyBase>.qc' ")
    print("   ")
    

if __name__ == "__main__":
    parser = argparse.ArgumentParser('Study-wise QC for dMRI data', add_help=False)
    parser.add_argument('list', help='text file containing a list of single-subject qc.json files')
    if len(sys.argv)<2:
        usage()
        sys.exit(1)
    parser.add_argument('-g', '--grouping', required=False, help='Text file containing grouping variable for the listed subjects')
    parser.add_argument('-gdb', '--group-db', required=False, help='Text file containing grouping variable for the database subjects')
    parser.add_argument('-u', '--update', nargs='?', default=1, const=2, help='Update existing single subject qc reports after generating group report or with a pre-existing group_db.json one')
    parser.add_argument('-o', '--output-dir', required=False, help='Output directory')
    args = parser.parse_args()
    from eddy_qc.SQUAD.squad import main
    main(args.list, args.grouping, args.group_db, args.update, args.output_dir)
